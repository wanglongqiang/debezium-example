spring:
  profiles:
    active: postgres
  kafka:
    bootstrap-servers:
      - localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: test-consumer
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.example.scratch.embeddeddebezium
logging:
  level:
    root: info
    com.example.scratch.embeddeddebezium: debug

debezium:
  name: debezium-connector
  connector:
    class: io.debezium.connector.postgresql.PostgresConnector
  offset:
    #    storage: org.apache.kafka.connect.storage.FileOffsetBackingStore
    #    storage.file.filename: ./offset-postgres.dat
    storage: org.apache.kafka.connect.storage.KafkaOffsetBackingStore
    storage.topic: debezium-connector-offset
    storage.partitions: 1
    storage.replication.factor: 1
    flush.interval.ms: 60000
  database:
    server.name: dbzserver
    hostname: localhost
    port: 5432
    user: postgres
    password: postgres
    dbname: postgres
  heartbeat:
    interval.ms: 1000
  kafka:
    bootstrap.servers: localhost:9092
  properties:
    plugin.name: pgoutput
table-change-topic:
  name: table-change
  partitions: 1
  replication-factor: 1



